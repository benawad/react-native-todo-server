Websocket Server is now running on http://localhost:5000
Feathers application started on localhost:3030
Instance {
  dataValues: 
   { id: 1,
     email: 'bob',
     password: '$2a$10$76IJbZZAgIpOIJEJN0uI9.i5wRS/yfZFd8w.ogXqQKv304TW1iaXi',
     createdAt: 2017-03-20T22:59:14.796Z,
     updatedAt: 2017-03-20T22:59:14.796Z,
     TodoLists: [] },
  _previousDataValues: 
   { id: 1,
     email: 'bob',
     password: '$2a$10$76IJbZZAgIpOIJEJN0uI9.i5wRS/yfZFd8w.ogXqQKv304TW1iaXi',
     createdAt: 2017-03-20T22:59:14.796Z,
     updatedAt: 2017-03-20T22:59:14.796Z,
     TodoLists: [] },
  _changed: {},
  '$modelOptions': 
   { timestamps: true,
     instanceMethods: {},
     classMethods: { associate: [Function: associate] },
     validate: {},
     freezeTableName: true,
     underscored: false,
     underscoredAll: false,
     paranoid: false,
     rejectOnEmpty: false,
     whereCollection: { id: 1 },
     schema: null,
     schemaDelimiter: '',
     defaultScope: {},
     scopes: [],
     hooks: {},
     indexes: [],
     name: { plural: 'users', singular: 'user' },
     omitNul: false,
     sequelize: 
      Sequelize {
        options: [Object],
        config: [Object],
        dialect: [Object],
        models: [Object],
        modelManager: [Object],
        connectionManager: [Object],
        importCache: {},
        test: [Object],
        queryInterface: [Object] },
     uniqueKeys: { users_email_unique: [Object] },
     hasPrimaryKeys: true },
  '$options': 
   { isNewRecord: false,
     '$schema': null,
     '$schemaDelimiter': '',
     include: [ [Object] ],
     includeNames: [ 'TodoLists' ],
     includeMap: { TodoLists: [Object] },
     includeValidated: true,
     attributes: [ 'id', 'email', 'password', 'createdAt', 'updatedAt' ],
     raw: true },
  hasPrimaryKeys: true,
  __eagerlyLoadedAssociations: [],
  isNewRecord: false,
  TodoLists: [] }
(---)
[ Instance {
    dataValues: 
     { id: 2,
       email: 'bob2',
       password: '$2a$10$RCX.rW5TTfPYdxEo/hmwZuGeAP6SRuWpXwuqzGv.0F0UQV2B8OCOK',
       createdAt: 2017-03-20T22:59:22.206Z,
       updatedAt: 2017-03-20T22:59:22.206Z,
       TodoLists: [] },
    _previousDataValues: 
     { id: 2,
       email: 'bob2',
       password: '$2a$10$RCX.rW5TTfPYdxEo/hmwZuGeAP6SRuWpXwuqzGv.0F0UQV2B8OCOK',
       createdAt: 2017-03-20T22:59:22.206Z,
       updatedAt: 2017-03-20T22:59:22.206Z,
       TodoLists: [] },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: {},
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       include: [Object],
       includeNames: [Object],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Object],
       raw: true },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    TodoLists: [] },
  Instance {
    dataValues: 
     { id: 5,
       email: 'bob5',
       password: '$2a$10$ETTJMJVpAxrf0mJ3GHiTu.KuxRyzbVw7vpcBzECqoXS8p.s0SyL0C',
       createdAt: 2017-03-22T02:42:17.606Z,
       updatedAt: 2017-03-22T02:42:17.606Z,
       TodoLists: [] },
    _previousDataValues: 
     { id: 5,
       email: 'bob5',
       password: '$2a$10$ETTJMJVpAxrf0mJ3GHiTu.KuxRyzbVw7vpcBzECqoXS8p.s0SyL0C',
       createdAt: 2017-03-22T02:42:17.606Z,
       updatedAt: 2017-03-22T02:42:17.606Z,
       TodoLists: [] },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: {},
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       include: [Object],
       includeNames: [Object],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Object],
       raw: true },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    TodoLists: [] },
  Instance {
    dataValues: 
     { id: 4,
       email: 'bob4',
       password: 'bob4',
       createdAt: 2017-03-20T23:07:05.121Z,
       updatedAt: 2017-03-20T23:07:05.121Z,
       TodoLists: [] },
    _previousDataValues: 
     { id: 4,
       email: 'bob4',
       password: 'bob4',
       createdAt: 2017-03-20T23:07:05.121Z,
       updatedAt: 2017-03-20T23:07:05.121Z,
       TodoLists: [] },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: {},
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       include: [Object],
       includeNames: [Object],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Object],
       raw: true },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    TodoLists: [] },
  Instance {
    dataValues: 
     { id: 1,
       email: 'bob',
       password: '$2a$10$76IJbZZAgIpOIJEJN0uI9.i5wRS/yfZFd8w.ogXqQKv304TW1iaXi',
       createdAt: 2017-03-20T22:59:14.796Z,
       updatedAt: 2017-03-20T22:59:14.796Z,
       TodoLists: [] },
    _previousDataValues: 
     { id: 1,
       email: 'bob',
       password: '$2a$10$76IJbZZAgIpOIJEJN0uI9.i5wRS/yfZFd8w.ogXqQKv304TW1iaXi',
       createdAt: 2017-03-20T22:59:14.796Z,
       updatedAt: 2017-03-20T22:59:14.796Z,
       TodoLists: [] },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: {},
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       include: [Object],
       includeNames: [Object],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Object],
       raw: true },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    TodoLists: [] },
  Instance {
    dataValues: 
     { id: 3,
       email: 'bob3',
       password: 'bob3',
       createdAt: 2017-03-20T23:07:05.120Z,
       updatedAt: 2017-03-20T23:07:05.120Z,
       TodoLists: [] },
    _previousDataValues: 
     { id: 3,
       email: 'bob3',
       password: 'bob3',
       createdAt: 2017-03-20T23:07:05.120Z,
       updatedAt: 2017-03-20T23:07:05.120Z,
       TodoLists: [] },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: false,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: {},
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       sequelize: [Object],
       uniqueKeys: [Object],
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       include: [Object],
       includeNames: [Object],
       includeMap: [Object],
       includeValidated: true,
       attributes: [Object],
       raw: true },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false,
    TodoLists: [] } ]
